---
apiVersion: v1
kind: Namespace
metadata:
  name: support-console
  labels:
    name: support-console

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: support-console-config
  namespace: support-console
data:
  # API endpoint configuration
  API_BASE_URL: "http://support-console-bff-svc.support-console.svc.cluster.local:8080"
  # Environment configuration
  NODE_ENV: "production"
  # Nginx configuration if needed
  NGINX_PORT: "8080"
  NGINX_HEALTH_PORT: "8181"
  # Logging configuration
  LOG_LEVEL: "info"

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: support-console-sa
  namespace: support-console

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: support-console
  namespace: support-console
  labels:
    app: support-console
    component: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: support-console
  template:
    metadata:
      labels:
        app: support-console
        component: frontend
    spec:
      serviceAccountName: support-console-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
        - name: support-console
          # Replace with your actual image
          image: beyondtrust-docker.jfrog.io/beyondtrust/nomine/support-console:3.0.2
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
              name: http
            - containerPort: 8181
              name: health
          env:
            - name: API_BASE_URL
              valueFrom:
                configMapKeyRef:
                  name: support-console-config
                  key: API_BASE_URL
            - name: NODE_ENV
              valueFrom:
                configMapKeyRef:
                  name: support-console-config
                  key: NODE_ENV
          envFrom:
            - configMapRef:
                name: support-console-config
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8181
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /ready
              port: 8181
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
          startupProbe:
            httpGet:
              path: /ready
              port: 8181
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 3
            failureThreshold: 30
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            readOnlyRootFilesystem: true
          volumeMounts:
            - name: nginx-cache
              mountPath: /var/cache/nginx
            - name: nginx-run
              mountPath: /var/run
            - name: tmp-volume
              mountPath: /tmp
      volumes:
        - name: nginx-cache
          emptyDir: {}
        - name: nginx-run
          emptyDir: {}
        - name: tmp-volume
          emptyDir: {}

---
apiVersion: v1
kind: Service
metadata:
  name: support-console-svc
  namespace: support-console
  labels:
    app: support-console
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP
    - name: health
      port: 8181
      targetPort: 8181
      protocol: TCP
  selector:
    app: support-console

---
# Ingress for external access (optional)
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: support-console-ingress
  namespace: support-console
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
spec:
  ingressClassName: nginx
  rules:
    - host: support-console.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: support-console-svc
                port:
                  number: 8080
